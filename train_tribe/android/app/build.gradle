plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Load keystore credentials (NOT committed) from android/keystore.properties
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.train_tribe"
    // Use API 35 as recommended by flutter_local_notifications
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        // Enable core library desugaring and Java 11
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.train_tribe"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            // Will use release keystore only if keystore.properties exists.
            if (keystorePropertiesFile.exists()) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            } else {
                // Fallback to debug signing to allow `flutter run --release` during early dev
                println "[WARN] keystore.properties not found - using debug signing for release build."
            }
        }
    }

    buildTypes {
        release {
            // Use release signing if available, else (early dev) Gradle will still pick debug.
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Core library desugaring (keep only one version; removed older duplicate)
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    // (Optional) Add Firebase BoM / play-services-auth here if not already elsewhere:
    // implementation platform('com.google.firebase:firebase-bom:33.3.0')
    // implementation 'com.google.firebase:firebase-auth'
    // implementation 'com.google.android.gms:play-services-auth:21.2.0'
}

apply plugin: 'com.google.gms.google-services' // Applica il plugin Google Services